# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ehci_pci" "ahci" "usb_storage" "sd_mod" "sdhci_pci" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  networking.hostName = "y500"; # Define your hostname.

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/b69c84fb-7123-4730-aa36-2af77653e33a";
    fsType = "ext4";
  };
  fileSystems."/boot/efi" = {
    device = "/dev/disk/by-uuid/88FB-029A";
    fsType = "vfat";
  };

  swapDevices = [ { device = "/dev/disk/by-uuid/fe6fc74f-0bd9-484e-9b6c-781b6de57b7e"; }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  # networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp3s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp4s0.useDHCP = lib.mkDefault true;
  networking = {
    interfaces.wlp4s0.useDHCP = lib.mkDefault true;
    interfaces.enp3s0.ipv4.addresses = [ {
      address = "192.168.1.20";
      prefixLength = 24;
    } ];
    defaultGateway = "192.168.1.1";
    nameservers = [ "8.8.8.8" ];
  };

  # don't put computer to sleep right after rebooting if the lid is closed
  services.logind.lidSwitchExternalPower = "ignore";

  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;


  services.postgresql = {
    enable = true;
    dataDir = "/mnt/Inky/postgresql/";
  };
  services.nextcloud = {
    enable = true;
    datadir = "/mnt/Inky/nc_data";
    hostName = "nc.kindrobot.ca";
    https = true;
    config = {
      dbtype = "pgsql";
      dbpassFile = "/var/nextcloud-secrets/db_password.txt";
      adminuser = "admin";
      adminpassFile = "/var/nextcloud-secrets/admin_password.txt";
      overwriteProtocol = "https";
    };
  };
  # ensure that postgres is running *before* running the setup
  systemd.services."nextcloud-setup" = {
    requires = ["postgresql.service"];
    after = ["postgresql.service"];
  };

  # nfs setup
  fileSystems."/mnt/Gabriel" = {
    device = "/dev/disk/by-label/Gabriel";
    fsType = "exfat";
    options = ["nofail"];
  };
  fileSystems."/mnt/Henry" = {
    device = "/dev/disk/by-label/Henry";
    fsType = "exfat";
    options = ["nofail"];
  };
  fileSystems."/mnt/Isabela" = {
    device = "/dev/disk/by-label/Isabela";
    fsType = "exfat";
    options = ["nofail"];
  };
  fileSystems."/mnt/Inky" = {
    device = "/dev/disk/by-label/Inky";
    fsType = "ext4";
    options = ["nofail"];
  };
  fileSystems."/mnt/J" = {
    device = "/dev/disk/by-label/J";
    fsType = "ext4";
    options = ["nofail"];
  };
  services.nfs.server.enable = true;
  services.nfs.server.exports = ''
    /mnt/Inky/nfs 192.168.1.0/24(rw,sync,no_subtree_check,no_root_squash)
  '';
  networking.firewall.allowedTCPPorts = [
    80 #apache
    2049 #nfs
  ];
}
